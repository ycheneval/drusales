<?php

/**
 * Implements hook_menu
 */
function weforum_schwabfoundation_menu() {
  $items = array();
  return $items;
}

/**
 * Implements hook_cron_queue_info
 */
function weforum_schwabfoundation_cron_queue_info() {
  $queues = array();
  $queues['socialentrepreneurs'] = array(
    'worker callback' => 'weforum_schwabfoundation_worker',
    'time' => 240,
  );
  return $queues;
}

/**
 * Receives a full social entrepreneur from F21
 * Creates or updates the node
 * 
 */
function weforum_schwabfoundation_worker($person = FALSE) {
  $result = new EntityFieldQuery();
  $result->entityCondition('entity_type', 'node')
          ->EntityCondition('bundle', 'social_entrepreneur')
          ->fieldCondition('field_per_id', 'value', $person['per_id'])
          ->execute();

  if (empty($result->ordered_results)) {
    $node = new stdClass();
    $node->type = 'social_entrepreneur';
    node_object_prepare($node);
  }
  else {
    $node = node_load((int) $result->ordered_results[0]->entity_id);
  }

  $node->field_full_name['und'][0]['value'] = $node->title = $person['full_name'];
  $node->field_per_id['und'][0]['value'] = $person['per_id'];
  $node->field_last_name['und'][0]['value'] = $person['last_name'];
  $node->field_first_name['und'][0]['value'] = $person['first_name'];
  $node->field_org_public_name['und'][0]['value'] = $person['org_public_name'];
  $node->field_org_id['und'][0]['value'] = $person['org_id'];
  
  $node->field_area_of_impact['und'] = array();
  foreach ($person['areas_of_impact'] as $key => $value) {
    $node->field_area_of_impact['und'][] = array('value' => $key);
  }
  
  $node->field_model['und'] = array();
  foreach ($person['models'] as $key => $value) {
    $node->field_model['und'][] = array('value' => $key);
  }
  
  $node->field_sector['und'] = array();
  foreach ($person['sectors'] as $key => $value) {
    $node->field_sector['und'][] = array('value' => $key);
  }
  node_save($node);
}

function weforum_schwabfoundation_importf21() {
  $sql = "SELECT PER.PER_ID,PER.PER_LAST_NAME,PER.PER_FIRST_NAME,ORG.ORG_PUBLIC_NAME,
FULL_NAME =PER.PER_LAST_NAME + ' ' +isnull(PER.PER_FIRST_NAME,''), ORG.ORG_ID ,
INT_NAME AS 'AREA_OF_IMPACT',
SEC.SEC_NAME AS 'SECTOR',
SECTYPE.SEC_NAME AS 'MODEL'
FROM 
PERSON_GROUP PG 
inner join CONSTITUENTGROUP CG on CG.CGR_ID = PG.CGR_ID
inner join PERSON PER on PG.PER_ID = PER.PER_ID
inner join RESPONSIBILITY RES on RES.PER_ID = PER.PER_ID
inner join ORGANIZATION ORG on RES.ORG_ID = ORG.ORG_ID
left outer join ORGANIZATION_OTHERINTEREST OI on  OI.ORG_ID = ORG.ORG_ID
left outer join INTEREST INTE on INTE.INT_ID=OI.INT_ID
left outer join ORGANIZATION_SECTOR ORS on ORS.ORG_ID = ORG.ORG_ID
left outer join SECTOR SEC on ORS.SEC_ID = SEC.SEC_ID
left outer join ORGANIZATION_SECTOR ORGTYPE on ORGTYPE.ORG_ID = ORG.ORG_ID
left outer join SECTOR SECTYPE on ORGTYPE.SEC_ID = SECTYPE.SEC_ID
WHERE 
(CGR_NAME LIKE 'SCHWAB SOCIAL ENTREPRENEUR 2%' OR CGR_NAME LIKE 'SCHWAB SOCIAL ENTREPRENEUR of the Year 2%')
AND PG.GST_ID = 2 -- ACCEPTED
AND RES.RES_ACTIVE_FLAG='Y'
AND RES_PRIMARY_FLAG='Y'
AND RES_START_DATE < GETDATE()
AND ISNULL(RES_END_DATE,DATEADD(D,1,GETDATE())) >= GETDATE()
AND LEFT(SEC.SEC_CODE,1) ='Z'
AND LEFT(SECTYPE.SEC_CODE,1) = 'Y'
ORDER BY 2,3";
  $result = weforum_f21_query($sql);
  $queue = DrupalQueue::get('socialentrepreneurs');
  $count = 0;
  
  $areas_of_impact = array();
  $sectors = array();
  $models = array();
  
  foreach ($result as $key => $value) {
    $person = array();
    $person = array(
      'full_name' => $value['FULL_NAME'],
      'per_id' => $value['PER_ID'],
      'last_name' => $value['PER_LAST_NAME'],
      'first_name' => $value['PER_FIRST_NAME'],
      'org_public_name' => $value['ORG_PUBLIC_NAME'],
      'org_id' => $value['ORG_ID'],
    );
    // Making sure we have one array per person, with distinct values
    $areas_of_impact[$person['per_id']][$value['AREA_OF_IMPACT']] = TRUE;
    $sectors[$person['per_id']][$value['SECTOR']] = TRUE;
    $models[$person['per_id']][$value['MODEL']] = TRUE;
    
    $person['areas_of_impact'] = $areas_of_impact[$person['per_id']];
    $person['sectors'] = $sectors[$person['per_id']];
    $person['models'] = $models[$person['per_id']];
    
    if ($queue->createItem($person)) {
      $count++;
      //Marking this person as handled
      $handled[$person['per_id']] = TRUE; 
    }
  }
  
  // Searching and deleting persons not in the DB anymore
  $result = new EntityFieldQuery();
  $result->entityCondition('entity_type', 'node')
          ->EntityCondition('bundle', 'social_entrepreneur')
          ->fieldCondition('field_per_id', 'value', array_keys($handled), 'NOT IN')
          ->execute();
  if(!empty($result->ordered_results)) {
    foreach($result->ordered_results as $key => $value) {
      node_delete($value->entity_id);
      watchdog('weforum_schwabfoundation', 'Social entrepreneur removed', array(), WATCHDOG_ERROR);
    }
  }
  return $count;
}

